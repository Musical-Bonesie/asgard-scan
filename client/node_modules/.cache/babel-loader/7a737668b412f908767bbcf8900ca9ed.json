{"ast":null,"code":"import _objectSpread from\"/Users/Signe/Documents/work-folder/CODING/BrainStation/Capstone/asgard-scan/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"/Users/Signe/Documents/work-folder/CODING/BrainStation/Capstone/asgard-scan/client/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";var _excluded=[\"component\"];import React from\"react\";import{Route,Redirect}from\"react-router-dom\";import HomePage from\"../../pages/HomePage/HomePage\";//create a route so only valid users can access the HomePage.\n// ...rest gives access to token inside of sessionStorage if a valid user has logged in.\nimport{jsx as _jsx}from\"react/jsx-runtime\";var ProtectedRoute=function ProtectedRoute(_ref){var Component=_ref.component,rest=_objectWithoutProperties(_ref,_excluded);var token=sessionStorage.getItem(\"token\");//return a Route that contains all reactRouterProps to render a specific page depending if there is a valid token or not.\nreturn/*#__PURE__*/_jsx(Route,_objectSpread(_objectSpread({},rest),{},{render:function render(routeProps){return(//If there is no token rediect to login page. If there is a valid token take the user to the HomePage.\n!token?/*#__PURE__*/_jsx(Redirect,{to:\"/login\"}):/*#__PURE__*/_jsx(HomePage,_objectSpread({},routeProps)));}}));};export default ProtectedRoute;","map":{"version":3,"sources":["/Users/Signe/Documents/work-folder/CODING/BrainStation/Capstone/asgard-scan/client/src/components/ProtectedRoute/ProtectedRoute.js"],"names":["React","Route","Redirect","HomePage","ProtectedRoute","Component","component","rest","token","sessionStorage","getItem","routeProps"],"mappings":"yXAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,KAAT,CAAgBC,QAAhB,KAAgC,kBAAhC,CACA,MAAOC,CAAAA,QAAP,KAAqB,+BAArB,CAEA;AACA;2CAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,MAAuC,IAAzBC,CAAAA,SAAyB,MAApCC,SAAoC,CAAXC,IAAW,0CAC5D,GAAMC,CAAAA,KAAK,CAAGC,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAAd,CACA;AACA,mBACE,KAAC,KAAD,gCACMH,IADN,MAEE,MAAM,CAAE,gBAACI,UAAD,QACN;AACA,CAACH,KAAD,cAAS,KAAC,QAAD,EAAU,EAAE,CAAC,QAAb,EAAT,cAAoC,KAAC,QAAD,kBAAcG,UAAd,EAF9B,GAFV,GADF,CASD,CAZD,CAcA,cAAeP,CAAAA,cAAf","sourcesContent":["import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport HomePage from \"../../pages/HomePage/HomePage\";\n\n//create a route so only valid users can access the HomePage.\n// ...rest gives access to token inside of sessionStorage if a valid user has logged in.\n\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\n  const token = sessionStorage.getItem(\"token\");\n  //return a Route that contains all reactRouterProps to render a specific page depending if there is a valid token or not.\n  return (\n    <Route\n      {...rest}\n      render={(routeProps) =>\n        //If there is no token rediect to login page. If there is a valid token take the user to the HomePage.\n        !token ? <Redirect to=\"/login\" /> : <HomePage {...routeProps} />\n      }\n    />\n  );\n};\n\nexport default ProtectedRoute;\n"]},"metadata":{},"sourceType":"module"}