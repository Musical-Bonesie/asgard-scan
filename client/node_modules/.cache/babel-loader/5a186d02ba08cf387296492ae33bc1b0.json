{"ast":null,"code":"var _jsxFileName = \"/Users/Signe/Documents/work-folder/CODING/BrainStation/Capstone/asgard-scan/client/src/components/ProtectedRoute/ProtectedRoute.js\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport HomePage from \"../../pages/HomePage/HomePage\"; //create a route so only valid users can access the HomePage.\n// ...rest gives access to token inside of sessionStorage if a valid user has logged in.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProtectedRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  const token = sessionStorage.getItem(\"token\"); //return a Route that contains all reactRouterProps to render a specific page depending if there is a valid token or not.\n\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: routeProps => //If there is no token, rediect to login page. If there is a valid token take the user to the HomePage.\n    !token ? /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(HomePage, { ...routeProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 45\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ProtectedRoute;\nexport default ProtectedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"sources":["/Users/Signe/Documents/work-folder/CODING/BrainStation/Capstone/asgard-scan/client/src/components/ProtectedRoute/ProtectedRoute.js"],"names":["React","Route","Redirect","HomePage","ProtectedRoute","component","Component","rest","token","sessionStorage","getItem","routeProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,QAAP,MAAqB,+BAArB,C,CAEA;AACA;;;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AAC5D,QAAMC,KAAK,GAAGC,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAAd,CAD4D,CAE5D;;AACA,sBACE,QAAC,KAAD,OACMH,IADN;AAEE,IAAA,MAAM,EAAGI,UAAD,IACN;AACA,KAACH,KAAD,gBAAS,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAT,gBAAoC,QAAC,QAAD,OAAcG;AAAd;AAAA;AAAA;AAAA;AAAA;AAJxC;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAZD;;KAAMP,c;AAcN,eAAeA,cAAf","sourcesContent":["import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport HomePage from \"../../pages/HomePage/HomePage\";\n\n//create a route so only valid users can access the HomePage.\n// ...rest gives access to token inside of sessionStorage if a valid user has logged in.\n\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\n  const token = sessionStorage.getItem(\"token\");\n  //return a Route that contains all reactRouterProps to render a specific page depending if there is a valid token or not.\n  return (\n    <Route\n      {...rest}\n      render={(routeProps) =>\n        //If there is no token, rediect to login page. If there is a valid token take the user to the HomePage.\n        !token ? <Redirect to=\"/login\" /> : <HomePage {...routeProps} />\n      }\n    />\n  );\n};\n\nexport default ProtectedRoute;\n"]},"metadata":{},"sourceType":"module"}